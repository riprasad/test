name: Release Images
on:
  workflow_dispatch: {}
  release:
    types: [released]

jobs:
  release-images:
    #if: github.repository_owner == 'Apicurio' && github.event.inputs.branch == 'master'
    runs-on: ubuntu-18.04 
    steps:

      - name: Fetch Latest Release Details
        run: touch latestRelease.json && curl https://api.github.com/repos/apicurio/apicurio-registry/releases/latest > latestRelease.json

      - name: Retrieve Required Details
        run: |
          echo "RELEASE_VERSION=$(cat latestRelease.json | jq '.name' | sed 's/"//g')" >> $GITHUB_ENV
          echo "SOURCE_CODE_URL=$(cat latestRelease.json | jq '.zipball_url' | sed 's/"//g')" >> $GITHUB_ENV

      - name: Download Source Code
        run: |
         #wget -c $SOURCE_CODE_URL && unzip $RELEASE_VERSION && ls -lrt && mv Apicurio* registry
         git clone https://github.com/riprasad/registry-test.git registry

      - name: Verify Project Version
        run: |
          cd registry
          PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [[ $PROJECT_VERSION != $RELEASE_VERSION ]]
          then
              echo "ERROR: Project Version '${PROJECT_VERSION}' does not match with Released Version '${RELEASE_VERSION}'"
              exit 1	  
          fi

      - name: Set up JDK 11
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '11'
          architecture: x64

  #    - name: Build Project
  #      run: cd registry && make SKIP_TESTS=true BUILD_FLAGS='-Dmaven.wagon.httpconnectionManager.maxTotal=30 -Dmaven.wagon.http.retryHandler.count=5' build-all

      - name: Build The Images For Docker.io
        run: cd registry && ./.github/scripts/build-images.sh master docker.io release ${RELEASE_VERSION} 

      - name: List All Docker Images
        run: docker images
      
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          
 # - name: Push The Images To Docker.io 
 #       run: cd registry && ./.github/scripts/push-images.sh master docker.io release ${RELEASE_VERSION}
        
      - name: Build The Images For Quay.io
        run: |
         #cd registry && ./.github/scripts/build-images.sh master quay.io release ${RELEASE_VERSION}
         cd registry
         docker image tag  docker.io/riprasad/apicurio-registry-mem:2.0.0.Final riprasad/apicurio-registry-mem:2.0.0.Final riprasad/apicurio-registry-mem:latest-release
         docker image tag  docker.io/riprasad/apicurio-registry-sql:2.0.0.Final quay.io/riprasad/apicurio-registry-sql:2.0.0.Final quay.io/riprasad/apicurio-registry-sql:latest-release
         docker image tag  docker.io/riprasad/apicurio-registry-kafkasql:2.0.0.Final quay.io/riprasad/apicurio-registry-kafkasql:2.0.0.Final quay.io/riprasad/apicurio-registry-kafkasql:latest-release
         docker image tag  docker.io/riprasad/apicurio-registry-tenant-manager-api:2.0.0.Final quay.io/riprasad/apicurio-registry-tenant-manager-api:2.0.0.Final quay.io/riprasad/apicurio-registry-tenant-manager-api:latest-release


      - name: List All Docker Images
        run: docker images
          
      - name: Login to Quay.io Registry
        run: docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_PASSWORD }}" Quay.io
          
    #  - name: Push The Images To Quay.io 
    #    run: |
    #     #cd registry && ./.github/scripts/push-images.sh master quay.io release ${RELEASE_VERSION}
    #     docker push quay.io/riprasad/apicurio-registry-mem:2.0.0.Final
    #     docker push quay.io/riprasad/apicurio-registry-sql:2.0.0.Final
    #     docker push quay.io/riprasad/apicurio-registry-kafkasql:2.0.0.Final
    #     docker push quay.io/riprasad/apicurio-registry-tenant-manager-api:2.0.0.Final
    #     docker push quay.io/riprasad/apicurio-registry-mem:latest-release
    #     docker push quay.io/riprasad/apicurio-registry-sql:latest-release
    #     docker push quay.io/riprasad/apicurio-registry-kafkasql:latest-release
    #     docker push quay.io/riprasad/apicurio-registry-tenant-manager-api:latest-release



  verify-release:
    runs-on: ubuntu-18.04
    needs: ["release-images"]   # The Job gets triggered only after the "release-images" job has successfully completed. The job doesn't run in case the "release" job fails
    #if: github.repository_owner == 'Apicurio' && github.event.inputs.branch == 'master'
    steps:
      - name: Set up JDK 11
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '11'
          architecture: x64

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Verify Docker Release For mem
        run: ./.github/scripts/verify-docker-release.sh riprasad/apicurio-registry-mem:${RELEASE_VERSION} riprasad/apicurio-registry-mem:latest-release 
     
      - name: Verify Docker Release For sql
        run: ./.github/scripts/verify-docker-release.sh riprasad/apicurio-registry-sql:${RELEASE_VERSION} riprasad/apicurio-registry-sql:latest-release 
    
      - name: Verify Docker Release For kafkasql
        run: ./.github/scripts/verify-docker-release.sh riprasad/apicurio-registry-kafkasql:${RELEASE_VERSION} riprasad/apicurio-registry-kafkasql:latest-release 